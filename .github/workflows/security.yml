name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * 1' # Weekly on Monday at 2 AM

jobs:
  # Dependency vulnerability scanning
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: guarantees-module/frontend/package-lock.json

    - name: Run Maven dependency check
      run: |
        cd guarantees-module/backend
        mvn org.owasp:dependency-check-maven:check

    - name: Run npm audit
      run: |
        cd guarantees-module/frontend
        npm audit --audit-level=moderate

    - name: Run npm audit for Swift platform
      run: |
        cd swift-test-platform
        npm audit --audit-level=moderate

  # Code security scanning
  code-security-scan:
    name: Code Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Run CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        languages: java, javascript

  # SAST (Static Application Security Testing)
  sast-scan:
    name: SAST Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Semgrep SAST
      uses: returntocorp/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/owasp-top-ten
          p/java
          p/javascript
          p/typescript
        generateSarif: "1"

    - name: Upload Semgrep results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: semgrep.sarif

  # License compliance check
  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: guarantees-module/frontend/package-lock.json

    - name: Check Maven dependencies licenses
      run: |
        cd guarantees-module/backend
        mvn org.codehaus.mojo:license-maven-plugin:add-third-party

    - name: Check npm dependencies licenses
      run: |
        cd guarantees-module/frontend
        npx license-checker --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC'

  # Secret scanning
  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run TruffleHog secret scanner
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  # Container security scanning
  container-security:
    name: Container Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build backend image
      run: |
        cd guarantees-module/backend
        docker build -t guarantees-backend:security-scan .

    - name: Build frontend image
      run: |
        cd guarantees-module/frontend
        docker build -t guarantees-frontend:security-scan .

    - name: Run Trivy container scan on backend
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'guarantees-backend:security-scan'
        format: 'sarif'
        output: 'trivy-backend-results.sarif'

    - name: Run Trivy container scan on frontend
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'guarantees-frontend:security-scan'
        format: 'sarif'
        output: 'trivy-frontend-results.sarif'

    - name: Upload container scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-backend-results.sarif,trivy-frontend-results.sarif'

  # Security policy compliance
  security-policy:
    name: Security Policy Compliance
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check security policy file
      run: |
        if [ ! -f "SECURITY.md" ]; then
          echo "SECURITY.md file not found. Creating one..."
          cat > SECURITY.md << 'EOF'
        # Security Policy

        ## Supported Versions

        | Version | Supported          |
        | ------- | ------------------ |
        | 1.0.x   | :white_check_mark: |
        | < 1.0   | :x:                |

        ## Reporting a Vulnerability

        Please report security vulnerabilities to security@interexport.com

        We will respond to security reports within 48 hours.
        EOF
        fi

    - name: Validate security policy
      run: |
        echo "Security policy validation completed"

  # Notify on security issues
  security-notification:
    name: Security Notification
    runs-on: ubuntu-latest
    needs: [dependency-scan, code-security-scan, sast-scan, license-check, secret-scan]
    if: failure()

    steps:
    - name: Notify security team
      run: |
        echo "Security scan failed. Please review the results."
        # Add notification logic here (Slack, email, etc.)
